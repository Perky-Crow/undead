<%= book_illustration book, "hero.png", "Hero jumping" %>

<h2>The fallen hero</h2>

<p>We'll create a new <span class="code">hero.js</span> file. We'll start with a really basic version to get started, and we'll make it better as we go through this chapter.</p>

<%= source_code "javascript", "hero.js" do %>
export default class Hero {

    constructor () {
        this.x      = 0
        this.y      = 2.5
        this.width  = 1
        this.height = 1
        this.sprite = 'hero1'
    }

}
<% end %>

<p>Let's add it to the scene.</p>

<%= source_code "javascript", "scene.js" do %>
this.hero = new Hero()
<% end %>

<p>We just need to display it now. We'll make a function called <span class="code">drawHero</span> and use it in the <span class="code">drawScene</span> function.</p>

<%= source_code "javascript", "utils.js" do %>
function drawHero (ctx, scene, images) {
    const hero = scene.hero

    const drawParams = {
        x:      hero.x - scene.camera.x,
        y:      hero.y - scene.camera.y,
        width:  hero.width,
        height: hero.height,
        image:  images[hero.sprite]
    }

    drawImage(ctx, drawParams)
}

export function drawScene (ctx, scene, images) {
    // ... omitted for brevity

    drawHero(ctx, scene, images)
}
<% end %>

<p data-reader-target="beginner developer">If you refresh the page, you will notice that the hero disappears immediately. We need to tell the hero to follow the camera.</p>

<p data-reader-target="beginner developer">In the update function of the scene, after moving the camera, we can also reposition the hero. Let's move the hero half a unit to the right so that it's not too close to the edge.</p>

<div data-reader-target="beginner developer">
<%= source_code "javascript", "scene.js" do %>
update (deltaTime) {
    this.camera.x += this.camera.speed * deltaTime
    this.hero.x = this.camera.x + 0.5
    this.generateWorld()
}
<% end %>
</div>


<h2>Animate the hero</h2>

<p>We have an animation ready for the hero, which has 4 sprites that will be played repeatedly.</p>

<%= book_illustration book, "hero_animation.png", "Hero animation" %>

<p>To show this animation, we need these things:</p>

<ul>
  <li>The order of the frames in a list</li>
  <li>The position of the current frame</li>
  <li>How much time has passed since the last frame</li>
  <li>The speed at which the frames should play</li>
</ul>

<p>We'll start by adding this information to our hero.</p>

<%= source_code "javascript", "hero.js" do %>
constructor () {
    // ... omitted for brevity

    this.frames     = ['hero1', 'hero2', 'hero3', 'hero4']
    this.frameIndex = 0
    this.frameTime  = 0
    this.frameSpeed = 0.2
}
<% end %>

<p data-reader-target="beginner developer">We'll make <span class="code">sprite</span> a property that will get the current frame from the list of frames.</p>

<div data-reader-target="beginner developer">
<%= source_code "javascript", "hero.js" do %>
get sprite () {
    return this.frames[this.frameIndex]
}
<% end %>
</div>

<p>Next, we'll create an <span class="code">update</span> function that will update the animation info based on the time passed. The animation speed will change with the camera speed.</p>

<div data-reader-target="beginner developer">
<%= source_code "javascript", "hero.js" do %>
update (deltaTime, camera) {
    this.x = camera.x + 0.5
    this.frameTime += deltaTime

    const nextFrameTime = this.frameSpeed / camera.speed

    if (this.frameTime > nextFrameTime) {
        this.frameTime = 0
        this.frameIndex = (this.frameIndex + 1) % this.frames.length
    }
}
<% end %>
</div>

<p data-reader-target="beginner developer">We'll then use this function in the <span class="code">update</span> function of the scene.</p>

<div data-reader-target="beginner developer">
<%= source_code "javascript", "scene.js" do %>
update (deltaTime) {
    this.camera.x += this.camera.speed * deltaTime
    this.hero.update(deltaTime, this.camera)
    this.generateWorld()
}
<% end %>
</div>

<p>Now our hero will look like he's running!</p>



<h2>Jumping</h2>


<p>To make our hero jump, we'll add some new informations:</p>

<ul>
  <li>We'll need to know the <strong>jump force</strong> and <strong>fall speed</strong> (which is also called <span class="code">gravity</span>)</li>
  <li>We'll also need to know where the <strong>ground</strong> is</li>
  <li>Lastly, we'll need to keep track of the hero's current <strong>velocity</strong>, whether they're going up or down</li>
</ul>

<%= book_illustration book, "jump_gravity.png", "Jump force and gravity" %>

<%= source_code "javascript", "hero.js" do %>
constructor () {
    // ... omitted for brevity

    this.gravity   = 35
    this.jumpForce = -9
    this.velocityY = 0
    this.groundY   = 2.5
}
<% end %>

<p>Now that we have this new information, we can create a <span class="code">jump</span> function that will make the hero jump by applying an upward force if they're on the ground.</p>

<%= source_code "javascript", "hero.js" do %>
jump () {
    if (this.y === this.groundY) {
        this.velocityY = this.jumpForce
    }
}
<% end %>

<p data-reader-target="beginner developer">In the hero's <span class="code">update</span> function, we'll apply gravity and velocity to the hero. If the hero is on the ground, we'll set their velocity to 0 to stop them from falling through the ground.</p>

<div data-reader-target="beginner developer">
<%= source_code "javascript", "hero.js" do %>
update (deltaTime, camera) {
    // ... omitted for brevity

    this.y += this.velocityY * deltaTime
    this.velocityY += this.gravity * deltaTime

    if (this.y > this.groundY) {
        this.y = this.groundY
        this.velocityY = 0
    }
}
<% end %>
</div>



<h2>Catch the mouse</h2>

<p>We're all set for jumping! The last thing we need to do is to listen for mouse clicks and call the hero's <span class="code">jump</span> function.

<p>To do this, we'll go back to the <span class="code">toy.js</span> file and add an event listener to the canvas.</p>

<%= source_code "javascript", "toy.js" do %>
canvas.addEventListener('pointerdown', () => {
    scene.hero.jump()
})
<% end %>

<p>Go ahead! Try to jump!</p>

<iframe src="/fallen_hero/index.html?speed=false&obstacles=false&score=false&ground=false" frameborder="0"></iframe>


<h2>A hero is born</h2>

<ul>
    <li>He moves with the camera</li>
    <li>He has multiple sprites to make an animation</li>
    <li>He can jump</li>
</ul>

<p>The next step is to make the game more challenging by adding obstacles.</p>

<%= render "chapter_sources",
  download_url: "https://github.com/Perky-Crow/fallen_hero/releases/tag/c6",
  explore_url: "https://github.com/Perky-Crow/fallen_hero/tree/c6"
%>